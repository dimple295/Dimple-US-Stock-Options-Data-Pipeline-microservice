# 1️⃣ ServiceAccount for Ingress Controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: default
---
# 2️⃣ RBAC - ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - services
  verbs: ["list", "watch", "get"]
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingressclasses
  - ingresses
  - ingresses/status
  verbs: ["list", "watch", "get", "update"]
---
# 3️⃣ RBAC - ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: default
---
# 4️⃣ ConfigMap (for custom NGINX settings)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: default
data: {}
---
# 5️⃣ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: default
  labels:
    io.kompose.service: ingress-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: ingress-nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: ingress-nginx
    spec:
      serviceAccountName: ingress-nginx
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.9.1
          imagePullPolicy: IfNotPresent
          args:
          - /nginx-ingress-controller
          - --configmap=$(POD_NAMESPACE)/nginx-configuration
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
          - containerPort: 80
          - containerPort: 443
      restartPolicy: Always
---
# 6️⃣ Service (NodePort for external access)
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: default
spec:
  type: NodePort
  selector:
    io.kompose.service: ingress-nginx
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
    nodePort: 30443
